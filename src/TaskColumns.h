#ifndef TASK_COLUMNS_H
#define TASK_COLUMNS_H

const char task_columns[] = {
	0x52, 0x56, 0xf2, 0x4f, 0x16, 0x00, 0x00, 0x00, // RV.O....
	0x09, 0x00, 0x00, 0x00, 0x43, 0x6f, 0x6d, 0x70, // ....Comp
	0x6c, 0x65, 0x74, 0x65, 0x64, 0x00, 0x00, 0x00, // leted...
	0x20, 0x42, 0x00, 0x00, 0xa0, 0x41, 0x00, 0x00, // .B...A..
	0x00, 0x00, 0x0e, 0x00, 0x00, 0x00, 0x4d, 0x45, // ......ME
	0x54, 0x41, 0x3a, 0x63, 0x6f, 0x6d, 0x70, 0x6c, // TA:compl
	0x65, 0x74, 0x65, 0x64, 0x00, 0x4c, 0xcf, 0xef, // eted.L..
	0x6b, 0x4c, 0x4f, 0x4f, 0x42, 0x00, 0x01, 0x08, // kLOOB...
	0x00, 0x00, 0x00, 0x63, 0x68, 0x65, 0x63, 0x6b, // ...check
	0x62, 0x6f, 0x78, 0x00, 0x52, 0x56, 0xf2, 0x4f, // box.RV.O
	0x16, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, // ........
	0x4e, 0x61, 0x6d, 0x65, 0x00, 0x00, 0x00, 0x98, // Name....
	0x42, 0x00, 0x00, 0x74, 0x42, 0x00, 0x00, 0x00, // B..tB...
	0x00, 0x0a, 0x00, 0x00, 0x00, 0x5f, 0x73, 0x74, // ....._st
	0x61, 0x74, 0x2f, 0x6e, 0x61, 0x6d, 0x65, 0x00, // at/name.
	0x52, 0xdd, 0xd3, 0xef, 0x52, 0x54, 0x53, 0x43, // R...RTSC
	0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x52, // .......R
	0x56, 0xf2, 0x4f, 0x16, 0x00, 0x00, 0x00, 0x08, // V.O.....
	0x00, 0x00, 0x00, 0x43, 0x61, 0x74, 0x65, 0x67, // ...Categ
	0x6f, 0x72, 0x79, 0x00, 0x00, 0x00, 0x19, 0x43, // ory....C
	0x00, 0x00, 0xf0, 0x42, 0x00, 0x00, 0x00, 0x00, // ...B....
	0x0d, 0x00, 0x00, 0x00, 0x4d, 0x45, 0x54, 0x41, // ....META
	0x3a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, // :categor
	0x79, 0x00, 0x52, 0x56, 0x57, 0x5f, 0x52, 0x54, // y.RVW_RT
	0x53, 0x43, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, // SC......
	0x00, 0x52, 0x56, 0xf2, 0x4f, 0x16, 0x00, 0x00, // .RV.O...
	0x00, 0x05, 0x00, 0x00, 0x00, 0x4e, 0x6f, 0x74, // .....Not
	0x65, 0x73, 0x00, 0x00, 0x80, 0x90, 0x43, 0x00, // es....C.
	0x00, 0x05, 0x43, 0x00, 0x00, 0x00, 0x00, 0x0a, // ..C.....
	0x00, 0x00, 0x00, 0x4d, 0x45, 0x54, 0x41, 0x3a, // ...META:
	0x6e, 0x6f, 0x74, 0x65, 0x73, 0x00, 0x52, 0x7d, // notes.R}
	0x73, 0xd7, 0x52, 0x54, 0x53, 0x43, 0x00, 0x01  // s.RTSC..
};

#endif

